[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"local-data.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// server/local-data.js                                                                                //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nmodule.export({\n  localData: () => localData\n});\nconst localData = {\n  \"page\": 1,\n  \"results\": [{\n    \"backdrop_path\": \"/3ombg55JQiIpoPnXYb2oYdr6DtP.jpg\",\n    \"genre_ids\": [878, 28],\n    \"id\": 560144,\n    \"original_language\": \"en\",\n    \"original_title\": \"Skylines\",\n    \"overview\": \"Lorsqu'un virus menace de retourner les hybrides extraterrestres maintenant amicaux\",\n    \"popularity\": 3957.023,\n    \"poster_path\": \"/2W4ZvACURDyhiNnSIaFPHfNbny3.jpg\",\n    \"release_date\": \"2020-10-25\",\n    \"title\": \"Skylines\",\n    \"video\": false,\n    \"vote_average\": 5.9,\n    \"vote_count\": 120\n  }],\n  \"total_pages\": 500,\n  \"total_results\": 10000\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// server/main.js                                                                                      //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet localData;\nmodule.link(\"./local-data.js\", {\n  localData(v) {\n    localData = v;\n  }\n\n}, 1);\n\n/*\n\n    Faire des recherches par genre/réalisateur/…\n\n    Gestion des favoris/blacklist par profil utilisateur\n\n    Possibilité de noter un film\n\n    Possibilité de recommander un film à un autre utilisateur\n\n    Proposer des suggestions automatiques par genre\n\n */\n// API exemple : https://api.themoviedb.org/3/search/company?api_key=1793c4843a64fbd6fdba88ce08e45c5f&query=interstellar&page=1\nMeteor.startup(() => {// code to run on server at startup\n});\nWebApp.connectHandlers.use('/api/discover/movie', (req, res, next) => {\n  res.writeHead(200);\n  res.end(JSON.stringify(localData));\n});\nWebApp.connectHandlers.use('/api/discover/search', (req, res, next) => {\n  res.writeHead(200);\n  res.end(JSON.stringify(localData));\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"8b2c5228315875f9a5f390e9d507140f493ee6cb","servePath":"/app.js","sourceMap":{"version":3,"sources":["server/local-data.js","server/main.js"],"names":["module","export","localData","Meteor","link","v","startup","WebApp","connectHandlers","use","req","res","next","writeHead","end","JSON","stringify"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,WAAS,EAAC,MAAIA;AAAf,CAAd;AAAO,MAAMA,SAAS,GAAG;AACrB,UAAQ,CADa;AAErB,aAAW,CACP;AACI,qBAAiB,kCADrB;AAEI,iBAAa,CACT,GADS,EAET,EAFS,CAFjB;AAMI,UAAM,MANV;AAOI,yBAAqB,IAPzB;AAQI,sBAAkB,UARtB;AASI,gBAAY,qFAThB;AAUI,kBAAc,QAVlB;AAWI,mBAAe,kCAXnB;AAYI,oBAAgB,YAZpB;AAaI,aAAS,UAbb;AAcI,aAAS,KAdb;AAeI,oBAAgB,GAfpB;AAgBI,kBAAc;AAhBlB,GADO,CAFU;AAsBrB,iBAAe,GAtBM;AAuBrB,mBAAiB;AAvBI,CAAlB,C;;;;;;;;;;;ACAP,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,QAAM,CAACE,CAAD,EAAG;AAACF,UAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIH,SAAJ;AAAcF,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAA8B;AAACF,WAAS,CAACG,CAAD,EAAG;AAACH,aAAS,GAACG,CAAV;AAAY;;AAA1B,CAA9B,EAA0D,CAA1D;;AAG9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEAF,MAAM,CAACG,OAAP,CAAe,MAAM,CACnB;AACD,CAFD;AAIAC,MAAM,CAACC,eAAP,CAAuBC,GAAvB,CAA2B,qBAA3B,EAAkD,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClED,KAAG,CAACE,SAAJ,CAAc,GAAd;AACAF,KAAG,CAACG,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAed,SAAf,CAAR;AACH,CAHD;AAKAK,MAAM,CAACC,eAAP,CAAuBC,GAAvB,CAA2B,sBAA3B,EAAmD,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnED,KAAG,CAACE,SAAJ,CAAc,GAAd;AACAF,KAAG,CAACG,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAed,SAAf,CAAR;AACH,CAHD,E","file":"/app.js","sourcesContent":["export const localData = {\r\n    \"page\": 1,\r\n    \"results\": [\r\n        {\r\n            \"backdrop_path\": \"/3ombg55JQiIpoPnXYb2oYdr6DtP.jpg\",\r\n            \"genre_ids\": [\r\n                878,\r\n                28\r\n            ],\r\n            \"id\": 560144,\r\n            \"original_language\": \"en\",\r\n            \"original_title\": \"Skylines\",\r\n            \"overview\": \"Lorsqu'un virus menace de retourner les hybrides extraterrestres maintenant amicaux\",\r\n            \"popularity\": 3957.023,\r\n            \"poster_path\": \"/2W4ZvACURDyhiNnSIaFPHfNbny3.jpg\",\r\n            \"release_date\": \"2020-10-25\",\r\n            \"title\": \"Skylines\",\r\n            \"video\": false,\r\n            \"vote_average\": 5.9,\r\n            \"vote_count\": 120\r\n        },\r\n    ],\r\n    \"total_pages\": 500,\r\n    \"total_results\": 10000\r\n};\r\n","import { Meteor } from 'meteor/meteor';\nimport { localData } from './local-data.js';\n\n/*\n\n    Faire des recherches par genre/réalisateur/…\n\n    Gestion des favoris/blacklist par profil utilisateur\n\n    Possibilité de noter un film\n\n    Possibilité de recommander un film à un autre utilisateur\n\n    Proposer des suggestions automatiques par genre\n\n */\n\n// API exemple : https://api.themoviedb.org/3/search/company?api_key=1793c4843a64fbd6fdba88ce08e45c5f&query=interstellar&page=1\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n\nWebApp.connectHandlers.use('/api/discover/movie', (req, res, next) => {\n    res.writeHead(200);\n    res.end(JSON.stringify(localData));\n});\n\nWebApp.connectHandlers.use('/api/discover/search', (req, res, next) => {\n    res.writeHead(200);\n    res.end(JSON.stringify(localData));\n});\n"]}}]